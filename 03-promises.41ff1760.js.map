{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAWC,SAASC,cAAc,SAgBxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE9CG,EAAK,sBAAoBJ,QAAeC,SACzCA,MAvBPL,EAASa,iBAAiB,UAC1B,SAA0BC,GACxBA,EAAEC,iBACF,IAAIV,EAAQW,OAAOhB,EAASK,MAAMY,OAClC,MAAMC,EAASF,OAAOhB,EAASkB,OAAOD,OAChCE,EAAOH,OAAOhB,EAASmB,KAAKF,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCjB,EAAciB,EAAGf,GACdgB,MAAKC,GAAUC,EAAAzB,GAAS0B,OAAOC,QAAQH,KACvCI,OAAMC,GAASJ,EAAAzB,GAAS0B,OAAOI,QAAQD,KAE1CtB,GAASc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formElem = document.querySelector('.form');\nformElem.addEventListener('submit', onCreatePromises);\nfunction onCreatePromises(e) {\n  e.preventDefault();\n  let delay = Number(formElem.delay.value);\n  const amount = Number(formElem.amount.value);\n  const step = Number(formElem.step.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n\n    delay += step;\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formElem","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","amount","step","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.41ff1760.js.map"}